#!/bin/sh

# Print HTTP headers
echo "Content-type: application/json"
echo "Access-Control-Allow-Origin: *"
echo "Access-Control-Allow-Methods: GET, OPTIONS"
echo "Access-Control-Allow-Headers: Content-Type"
echo ""

# Fetch all rules that start with "Parental_"
rules=$(uci show firewall | grep "name='Parental_" | cut -d. -f2)

# If no rules found, return an error message
if [ -z "$rules" ]; then
    echo '{"status": "error", "message": "No parental control rules found"}'
    exit 0
fi

# Initialize JSON array
echo '{ "rules": ['

first=true
for rule in $rules; do
    mac=$(uci get firewall.$rule.src_mac 2>/dev/null || echo "Unknown")
    site_ip=$(uci get firewall.$rule.dest_ip 2>/dev/null || echo "Unknown")
    start_time=$(uci get firewall.$rule.start_time 2>/dev/null || echo "Unknown")
    end_time=$(uci get firewall.$rule.stop_time 2>/dev/null || echo "Unknown")

    # Extract domain name from rule name
    rule_name=$(uci get firewall.$rule.name)
    domain=$(echo "$rule_name" | sed -E 's/^Parental_([0-9A-Fa-f:]+)_//' | sed 's/__/\./g')

    # Add a comma before every entry except the first
    if [ "$first" = false ]; then
        echo ","
    fi
    first=false

    # Print rule in JSON format
    echo "  { \"mac\": \"$mac\", \"site\": \"$domain\", \"site_ip\": \"$site_ip\", \"start_time\": \"$start_time\", \"end_time\": \"$end_time\" }"
done

# Close JSON array
echo '] }'
