#!/bin/sh

# Print HTTP headers
echo "Content-type: application/json"
echo "Access-Control-Allow-Origin: *"
echo ""

# Parse GET parameters
QUERY_STRING=$(echo "$QUERY_STRING" | tr '&' '\n')

mac=""
site=""
start_time=""
end_time=""

# Extract parameters
while IFS='=' read -r key value; do
    case "$key" in
        "mac") mac="$value" ;;
        "site") site="$value" ;;
        "start_time") start_time="$value" ;;
        "end_time") end_time="$value" ;;
    esac
done <<EOF
$QUERY_STRING
EOF

# Validate input
if [ -z "$mac" ] || [ -z "$site" ] || [ -z "$start_time" ] || [ -z "$end_time" ]; then
    echo '{"error": "Missing required parameters"}'
    exit 1
fi

# Validate time format (HH:MM:SS)
validate_time() {
    echo "$1" | grep -Eq '^([0-1][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]$'
    return $?
}

if ! validate_time "$start_time" || ! validate_time "$end_time"; then
    echo '{"error": "Invalid time format. Use HH:MM:SS"}'
    exit 1
fi

# Resolve domain to multiple IPs using OpenWrt's DNS
ips=$(nslookup "$site" 70.70.70.1 | awk '/Address/ {print $NF}' | grep -Eo '([0-9]+\.){3}[0-9]+' | grep -v '^70\.70\.70\.1' | head -n 1)

# If that fails, try Google's DNS
if [ -z "$ips" ]; then
    ips=$(nslookup "$site" 8.8.8.8 | awk '/Address/ {print $NF}' | grep -Eo '([0-9]+\.){3}[0-9]+')
fi

# If still empty, return error
if [ -z "$ips" ]; then
    echo '{"error": "Failed to resolve domain"}'
    exit 1
fi

# Create firewall rules for **each** resolved IP
for ip in $ips; do
    rule_name="Parental_${mac//:/:}_$(echo "$site" | tr '.-' '__')"

    # Remove existing rules with the same name
    existing_rules=$(uci show firewall | grep "name='$rule_name'" | cut -d. -f2)
    if [ -n "$existing_rules" ]; then
        for rule in $existing_rules; do
            uci delete firewall.$rule
        done
    fi

    # Add firewall rule
    uci add firewall rule
    uci set firewall.@rule[-1].name="$rule_name"
    uci set firewall.@rule[-1].src='lan'
    uci set firewall.@rule[-1].dest='wan'
    uci set firewall.@rule[-1].proto='all'
    uci set firewall.@rule[-1].src_mac="$mac"
    uci set firewall.@rule[-1].dest_ip="$ip"
    uci set firewall.@rule[-1].target='REJECT'
    uci set firewall.@rule[-1].start_time="$start_time"
    uci set firewall.@rule[-1].stop_time="$end_time"
    uci set firewall.@rule[-1].enabled='1'
done

# Commit and reload firewall
uci commit firewall
/etc/init.d/firewall reload

echo '{"status": "success", "message": "Parental controls applied"}'
