#!/bin/sh

# Print HTTP headers
echo "Content-type: application/json"
echo "Access-Control-Allow-Origin: *"
echo "Access-Control-Allow-Methods: GET, POST, OPTIONS"
echo "Access-Control-Allow-Headers: Content-Type"
echo ""

# Parse query string
eval $(echo "$QUERY_STRING" | tr '&' '\n' | sed 's/\([^=]*\)=\([^=]*\)/\1="\2"/')

# Function to validate MAC address
validate_mac() {
    echo "$1" | grep -Eq '^([0-9A-Fa-f]{2}:){5}[0-9A-Fa-f]{2}$'
    return $?
}

# Check if MAC address is provided
if [ -z "$mac" ]; then
    echo '{"error": "MAC address required"}'
    exit 1
fi

# Validate MAC address format
if ! validate_mac "$mac"; then
    echo '{"error": "Invalid MAC address format"}'
    exit 1
fi

# Generate rule name based on MAC address
rule_name="Time_Restrict_${mac//:/:}"

# Find and remove existing rules for this MAC
existing_rules=$(uci show firewall | grep "name='$rule_name'" | cut -d. -f2)
if [ -n "$existing_rules" ]; then
    for rule in $existing_rules; do
        uci delete firewall.$rule
    done
    # Commit changes and reload firewall
    uci commit firewall
    /etc/init.d/firewall reload
    echo '{"status": "success", "message": "Internet restriction removed for MAC: '"$mac"'"}'
else
    echo '{"status": "error", "message": "No restriction found for MAC: '"$mac"'"}'
fi
